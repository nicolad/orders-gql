package models

type CompanyIn struct {
	ID         string `json:"id"`
	Name       string `json:"name"`
	WebsiteURL string `json:"websiteURL"`
	LogoURL    string `json:"logoURL"`
	WhiteLogo  bool   `json:"whiteLogo"`
}

type SpeakerIn struct {
	ID             string  `json:"id"`
	Name           string  `json:"name"`
	Title          *string `json:"title"`
	Email          string  `json:"email"`
	Company        string  `json:"company"`
	Github         string  `json:"github"`
	Twitter        *string `json:"twitter"`
	SpeakersBureau string  `json:"speakersBureau"`
}

type MeetupGroupIn struct {
	Photo            *string              `json:"photo"`
	Name             *string              `json:"name"`
	City             *string              `json:"city"`
	Country          *string              `json:"country"`
	Description      *string              `json:"description"`
	SponsorTiers     map[string]string    `json:"sponsorTiers"`
	MeetupID         string               `json:"meetupID"`
	Organizers       []string             `json:"organizers"`
	CfpLink          string               `json:"cfpLink"`
	Latitude         float64              `json:"latitude"`
	Longitude        float64              `json:"longitude"`
	EcosystemMembers []string             `json:"ecosystemMembers"`
	Meetups          map[string]*MeetupIn `json:"meetups"`
}

type MeetupIn struct {
	ID            int               `json:"id"`
	Name          string            `json:"name"`
	Date          string            `json:"date"`
	Duration      string            `json:"duration"`
	Attendees     int               `json:"attendees"`
	Address       string            `json:"address"`
	Photo         string            `json:"photo"`
	Recording     string            `json:"recording"`
	Sponsors      []*SponsorIn      `json:"sponsors"`
	Presentations []*PresentationIn `json:"presentations"`
}

type SponsorIn struct {
	Company string `json:"company"`
	Role    string `json:"role"`
}

type PresentationIn struct {
	Duration string    `json:"duration"`
	Title    string    `json:"title"`
	Slides   string    `json:"slides"`
	Speakers []*string `json:"speakers"`
}

type MeetupGroup struct {
	Photo       string
	Name        string
	City        string
	Country     string
	Description string
	MeetupID    string
	CfpLink     string
	Longitude   float64
	Latitude    float64
}

type Meetup struct {
	ID        int
	Name      string
	Date      string
	Duration  string
	Attendees int
	Address   string
	Photo     string
	Recording string
}

type Company struct {// Code generated by protoc-gen-go. DO NOT EDIT.
	// versions:
	// 	protoc-gen-go v1.28.0
	// 	protoc        v3.19.4
	// source: assa.proto
	
	package models
	
	import (
		protoreflect "google.golang.org/protobuf/reflect/protoreflect"
		protoimpl "google.golang.org/protobuf/runtime/protoimpl"
		reflect "reflect"
		sync "sync"
	)
	
	const (
		// Verify that this generated code is sufficiently up-to-date.
		_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
		// Verify that runtime/protoimpl is sufficiently up-to-date.
		_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
	)
	
	// Message defining a Member resource
	type Company struct {
		state         protoimpl.MessageState
		sizeCache     protoimpl.SizeCache
		unknownFields protoimpl.UnknownFields
	
		Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
		Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	}
	
	func (x *Company) Reset() {
		*x = Company{}
		if protoimpl.UnsafeEnabled {
			mi := &file_assa_proto_msgTypes[0]
			ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
			ms.StoreMessageInfo(mi)
		}
	}
	
	func (x *Company) String() string {
		return protoimpl.X.MessageStringOf(x)
	}
	
	func (*Company) ProtoMessage() {}
	
	func (x *Company) ProtoReflect() protoreflect.Message {
		mi := &file_assa_proto_msgTypes[0]
		if protoimpl.UnsafeEnabled && x != nil {
			ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
			if ms.LoadMessageInfo() == nil {
				ms.StoreMessageInfo(mi)
			}
			return ms
		}
		return mi.MessageOf(x)
	}
	
	// Deprecated: Use Company.ProtoReflect.Descriptor instead.
	func (*Company) Descriptor() ([]byte, []int) {
		return file_assa_proto_rawDescGZIP(), []int{0}
	}
	
	func (x *Company) GetId() string {
		if x != nil {
			return x.Id
		}
		return ""
	}
	
	func (x *Company) GetName() string {
		if x != nil {
			return x.Name
		}
		return ""
	}
	
	// Request message for [assa.v1.Members.CreateMember]
	type CreateMemberRequest struct {
		state         protoimpl.MessageState
		sizeCache     protoimpl.SizeCache
		unknownFields protoimpl.UnknownFields
	
		// The Member to create
		Member *Company `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	}
	
	func (x *CreateMemberRequest) Reset() {
		*x = CreateMemberRequest{}
		if protoimpl.UnsafeEnabled {
			mi := &file_assa_proto_msgTypes[1]
			ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
			ms.StoreMessageInfo(mi)
		}
	}
	
	func (x *CreateMemberRequest) String() string {
		return protoimpl.X.MessageStringOf(x)
	}
	
	func (*CreateMemberRequest) ProtoMessage() {}
	
	func (x *CreateMemberRequest) ProtoReflect() protoreflect.Message {
		mi := &file_assa_proto_msgTypes[1]
		if protoimpl.UnsafeEnabled && x != nil {
			ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
			if ms.LoadMessageInfo() == nil {
				ms.StoreMessageInfo(mi)
			}
			return ms
		}
		return mi.MessageOf(x)
	}
	
	// Deprecated: Use CreateMemberRequest.ProtoReflect.Descriptor instead.
	func (*CreateMemberRequest) Descriptor() ([]byte, []int) {
		return file_assa_proto_rawDescGZIP(), []int{1}
	}
	
	func (x *CreateMemberRequest) GetMember() *Company {
		if x != nil {
			return x.Member
		}
		return nil
	}
	
	// Request message for [assa.v1.Members.GetMember]
	type GetMemberRequest struct {
		state         protoimpl.MessageState
		sizeCache     protoimpl.SizeCache
		unknownFields protoimpl.UnknownFields
	
		// The name of the Member to retrieve
		// Format: members/{member}
		Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	}
	
	func (x *GetMemberRequest) Reset() {
		*x = GetMemberRequest{}
		if protoimpl.UnsafeEnabled {
			mi := &file_assa_proto_msgTypes[2]
			ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
			ms.StoreMessageInfo(mi)
		}
	}
	
	func (x *GetMemberRequest) String() string {
		return protoimpl.X.MessageStringOf(x)
	}
	
	func (*GetMemberRequest) ProtoMessage() {}
	
	func (x *GetMemberRequest) ProtoReflect() protoreflect.Message {
		mi := &file_assa_proto_msgTypes[2]
		if protoimpl.UnsafeEnabled && x != nil {
			ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
			if ms.LoadMessageInfo() == nil {
				ms.StoreMessageInfo(mi)
			}
			return ms
		}
		return mi.MessageOf(x)
	}
	
	// Deprecated: Use GetMemberRequest.ProtoReflect.Descriptor instead.
	func (*GetMemberRequest) Descriptor() ([]byte, []int) {
		return file_assa_proto_rawDescGZIP(), []int{2}
	}
	
	func (x *GetMemberRequest) GetName() string {
		if x != nil {
			return x.Name
		}
		return ""
	}
	
	var File_assa_proto protoreflect.FileDescriptor
	
	var file_assa_proto_rawDesc = []byte{
		0x0a, 0x0a, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x6f,
		0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x2d, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
		0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
		0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
		0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
		0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
		0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
		0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74,
		0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
		0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
		0x65, 0x32, 0x8f, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a,
		0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x2e,
		0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
		0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
		0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
		0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
		0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
		0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
		0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
		0x79, 0x22, 0x00, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
		0x6d, 0x2f, 0x6a, 0x61, 0x6e, 0x6b, 0x72, 0x79, 0x6e, 0x61, 0x75, 0x77, 0x2f, 0x61, 0x73, 0x73,
		0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
	}
	
	var (
		file_assa_proto_rawDescOnce sync.Once
		file_assa_proto_rawDescData = file_assa_proto_rawDesc
	)
	
	func file_assa_proto_rawDescGZIP() []byte {
		file_assa_proto_rawDescOnce.Do(func() {
			file_assa_proto_rawDescData = protoimpl.X.CompressGZIP(file_assa_proto_rawDescData)
		})
		return file_assa_proto_rawDescData
	}
	
	var file_assa_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
	var file_assa_proto_goTypes = []interface{}{
		(*Company)(nil),             // 0: models.v1.Company
		(*CreateMemberRequest)(nil), // 1: models.v1.CreateMemberRequest
		(*GetMemberRequest)(nil),    // 2: models.v1.GetMemberRequest
	}
	var file_assa_proto_depIdxs = []int32{
		0, // 0: models.v1.CreateMemberRequest.member:type_name -> models.v1.Company
		1, // 1: models.v1.Members.CreateMember:input_type -> models.v1.CreateMemberRequest
		2, // 2: models.v1.Members.GetMember:input_type -> models.v1.GetMemberRequest
		0, // 3: models.v1.Members.CreateMember:output_type -> models.v1.Company
		0, // 4: models.v1.Members.GetMember:output_type -> models.v1.Company
		3, // [3:5] is the sub-list for method output_type
		1, // [1:3] is the sub-list for method input_type
		1, // [1:1] is the sub-list for extension type_name
		1, // [1:1] is the sub-list for extension extendee
		0, // [0:1] is the sub-list for field type_name
	}
	
	func init() { file_assa_proto_init() }
	func file_assa_proto_init() {
		if File_assa_proto != nil {
			return
		}
		if !protoimpl.UnsafeEnabled {
			file_assa_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
				switch v := v.(*Company); i {
				case 0:
					return &v.state
				case 1:
					return &v.sizeCache
				case 2:
					return &v.unknownFields
				default:
					return nil
				}
			}
			file_assa_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
				switch v := v.(*CreateMemberRequest); i {
				case 0:
					return &v.state
				case 1:
					return &v.sizeCache
				case 2:
					return &v.unknownFields
				default:
					return nil
				}
			}
			file_assa_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
				switch v := v.(*GetMemberRequest); i {
				case 0:
					return &v.state
				case 1:
					return &v.sizeCache
				case 2:
					return &v.unknownFields
				default:
					return nil
				}
			}
		}
		type x struct{}
		out := protoimpl.TypeBuilder{
			File: protoimpl.DescBuilder{
				GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
				RawDescriptor: file_assa_proto_rawDesc,
				NumEnums:      0,
				NumMessages:   3,
				NumExtensions: 0,
				NumServices:   1,
			},
			GoTypes:           file_assa_proto_goTypes,
			DependencyIndexes: file_assa_proto_depIdxs,
			MessageInfos:      file_assa_proto_msgTypes,
		}.Build()
		File_assa_proto = out.File
		file_assa_proto_rawDesc = nil
		file_assa_proto_goTypes = nil
		file_assa_proto_depIdxs = nil
	}
	
	ID         string
	Name       string
	WebsiteURL string
	LogoURL    string
	WhiteLogo  bool
}

type Sponsor struct {
	ID   string
	Role string
}

type SponsorTier struct {
	ID   string
	Tier string
}

type Presentation struct {
	ID       string
	Duration string
	Title    string
	Slides   string
}

type Speaker struct {
	ID             string
	Name           string
	Title          *string
	Email          string
	Github         string
	Twitter        *string
	SpeakersBureau string
}

//Mapping Tables
type SpeakerToCompany struct {
	ID        string
	SpeakerID string
	CompanyID string
}

type SponsorTierToMeetupGroup struct {
	ID            string
	MeetupGroupID string
	SponsorTierID string
}

type SponsorTierToCompany struct {
	ID            string
	SponsorTierID string
	CompanyID     string
}

type MeetupGroupToOrganizer struct {
	ID            string
	MeetupGroupID string
	OrganizerID   string
}

type MeetupGroupToEcosystemMember struct {
	ID            string
	MeetupGroupID string
	CompanyID     string
}

type MeetupGroupToMeetup struct {
	ID            string
	MeetupGroupID string
	MeetupID      int
}

type MeetupToSponsor struct {
	ID        string
	MeetupID  int
	SponsorID string
}

type SponsorToCompany struct {
	ID        string
	SponsorID string
	CompanyID string
}

type MeetupToPresentation struct {
	ID             string
	MeetupID       int
	PresentationID string
}

type PresentationToSpeaker struct {
	ID             string
	PresentationID string
	SpeakerID      string
}
